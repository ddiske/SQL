-- Lex -> 사번, 급여, 직급, 부서명

SELECT EMPLOYEE_ID, SALARY, JOB_ID
FROM EMPLOYEES WHERE FIRST_NAME = 'Lex';

SELECT DEPARTMENT_NAME
FROM DEPARTMENTS
WHERE DEPARTMENT_ID = (
SELECT DEPARTMENT_ID 
FROM EMPLOYEES WHERE FIRST_NAME = 'Lex');

SELECT E.EMPLOYEE_ID, E.SALARY, E.JOB_ID, D.DEPARTMENT_NAME, D.DEPARTMENT_ID, L.CITY
FROM EMPLOYEES E
JOIN DEPARTMENTS D
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
JOIN LOCATIONS L
ON D.LOCATION_ID = L.LOCATION_ID 
WHERE E.FIRST_NAME = 'Lex';


-- SELF JOIN
-- 사원번호가 100인 사원의 직급과 월급, 그 사원의 상사의 직급과 월급을 출력
-- INNER, Equil, SELF
SELECT E.JOB_ID, E.FIRST_NAME, E.SALARY, M.FIRST_NAME, M.JOB_ID, M.SALARY 
FROM EMPLOYEES E
JOIN EMPLOYEES M
-- 조인조건의 컬럼명이 일치하지 않으면 NATURAL을 사용할 수 없음
ON E.MANAGER_ID = M.EMPLOYEE_ID
WHERE E.EMPLOYEE_ID = 102;



-- 상사가 없는 사원
SELECT * FROM EMPLOYEES WHERE MANAGER_ID IS NULL;

-- INNER, Equil
SELECT E.EMPLOYEE_ID, E.SALARY, E.JOB_ID, D.DEPARTMENT_NAME, D.DEPARTMENT_ID 
FROM EMPLOYEES E
JOIN DEPARTMENTS D
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID 
WHERE E.FIRST_NAME = 'Lex';

-- NATURAL(INNER), Equil
SELECT E.EMPLOYEE_ID, E.SALARY, E.JOB_ID, D.DEPARTMENT_NAME, DEPARTMENT_ID 
FROM EMPLOYEES E
NATURAL JOIN DEPARTMENTS D
WHERE E.FIRST_NAME = 'Lex';
-- NATURAL JOIN 사용시 두 테이블을 잇는 매개가 되는 컬럼은 별칭은 생략 --


-- OUTER, Equil
SELECT E.FIRST_NAME, D.DEPARTMENT_NAME, DEPARTMENT_ID 
FROM EMPLOYEES E
LEFT OUTER JOIN DEPARTMENTS D
-- ON D.DEPARTMENT_ID = E.DEPARTMENT_ID;
USING(DEPARTMENT_ID);-- USING은 NATURAL처럼


SELECT E.*, D.*
FROM EMPLOYEES E
JOIN DEPARTMENTS D
ON E.DEPARTMENT_ID = D.DEPARTMENT_ID;